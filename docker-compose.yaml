volumes:
  postgres-data:
    external: true
  pg-admin:
    external: true
services:
  postgres:
    build:
      context: ./relational-data
      dockerfile: ./Dockerfile.dev
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      # - POSTGRES_MULTIPLE_DATABASES=accounts
      POSTGRES_DB: postgres-data
      POSTGRES_USER: rc
      POSTGRES_PASSWORD: password
    ports:
      - 15432:5432
  fastapi:
    build:
      context: ./rollercoaster_service
      dockerfile: ./Dockerfile.dev
    ports:
      - 8000:8000
    volumes:
      - ./rollercoaster_service:/app
    environment:
      WEATHER_API_KEY: ${open_weather_api_key}
      RC_API_KEY: ${RC_KEY}
      SIGNING_KEY: 21251463829B9284AA7316D4D2F6D
      DATABASE_URL: postgresql://rc:password@postgres/postgres-data
      WAIT_HOSTS: postgres:5432
  pg-admin:
    image: dpage/pgadmin4
    volumes:
      - pg-admin:/var/lib/pgadmin
    ports:
      - 8082:80
    environment:
      PGADMIN_DEFAULT_EMAIL: email@email.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_DISABLE_POSTFIX: 1

  ghi:
    image: node:lts-bullseye
    command: /bin/bash run.sh
    working_dir: /app
    volumes:
      - ./ghi:/app
    ports:
      - "3000:3000"
    environment:
      HOST_OS: ${OS}
      NODE_ENV: development
      HOST: "0.0.0.0"
      PUBLIC_URL: http://localhost:3000
      REACT_APP_SAMPLE_SERVICE_API_HOST: http://localhost:8000
      # REACT_APP_THIRD_PARTY_SERVICE: https://captaincoaster.com/
